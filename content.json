{"posts":[{"title":"Hello World","text":"重启了博客的计划。 这里可能会写一些kotlin相关的新东西，最近比较感兴趣；还可能会有一些音游方面的心得或者教程，主要会是下落键盘游戏；再可能会有一些项目相关的内容，最近可能是物联网相关。 也可能会有一些个人生活上的小文章，那些就不太重要了。 大体上是这样，希望这次能够坚持下来，加油。 Uranus here.","link":"/uranusblog/2022/03/07/hello-world/"},{"title":"DM37毕业随想","text":"2021年12月24日，我用FL Studio写了一首名为goodbye2021的歌，打算在2022年1月1日凌晨发出去。两三年的惯例了，在临近年末的时候写一首所谓“电音”，发到关系最好的朋友们在的qq群里，让稀烂的编排与混音干碎朋友们的耳朵。不过这一次的告别去年歌曲有更深刻的意义，那就是告别我自己摸索（更恰当地说是乱玩）DAW的最后时光。 2022年2月27日，CEM电子音乐教室的电子基础班第37期（DM37）开班，Massica雨季老师教授了工业向的Techno风格，我开始第一次认真构思一首Acid Techno风格的电子音乐作为作业。 这是Uranus的电子音乐创作的开始。 DM37总结 DM37一共有四周的课程，每周教学两个相近的曲风，然后在五天之内要提交一首这类风格的作业，一方面来说时间是挺紧急的，另一方面就是短时间里收获满满。 第几周 教了什么风格呢 我最后写了什么呢 第一周 Techno / Tech House 半音乱走的Acid Techno 第二周 Trad Prog House / EDM Prog House nanahira采样的EDM 第三周 Heaven Trap / Future Bass 告白·告别（Heaven Trap Remix） 第四周 Future Bounce / Bass House Psy Trance做intro的Bass House Acid Techno应该是我最喜欢的一份作业了，最早学的Techno风格反而因为我Hardcore听得多（Hardcore也就是Hard Techno了）而写的挺有感觉，毕业的时候评价很高的作品也是Techno风格的，不得不说Techno作为早期实验性的电子音乐风格，很容易写出优秀的听感来啊。后来我还给直接加速到bpm170还是200来当作Schranz，还蛮好听的！当年的Hardcore也许就是这么产生的吧。 EDM类型的House不想再写第二次了（晕EDM患者正论），不过感谢有nanahira的音源，作业写起来没有那么令人疲惫，SuperSaw叠起来也挺有意思。vocal用的是音源而不是采样，因此做出来像Vocaloid一样（反而挺令人开心的？），这一点被雨季老师批评了，以后还是好好采样做。选EDM来做是想到Hardstyle风格应该也很需要用SuperSaw吧，不过后来发现这个音色似乎不是那么重要的，lead的失真感才是最需要考虑的地方（kick除外）。 Heaven Trap这一周是最吓人的，学校的DDL令人绝望地堆积起来了，这边的创作又一点灵感都没出现。然后是看到了噪哥在群里发言，我刚好想听neuro bass了就又去看了去年BOF的【BOFXVII】告白/告别（Project Nirvana Remix)｜BGA，想着原曲明明可以不这么黑暗的，做点Heaven Trap不是挺好吗，于是就决定了来写这个。另一件值得一提的事是这周课上完之后还没开始写作业，我就给LiZzerong提了想两个风格都做出来卷一卷的想法，刚好他也非常喜欢这两个风格，结果这个大flag意料之中没有站住。最终作业的反响挺好的，Hawk也说是这四次作业里最好听的一份，不过我个人还是因为没有原创而自卑了好一阵。 Future Bounce被我直接pass了（晕EDM患者二度发言），毫不犹豫选择了Bass House来做，令人惊喜的是这周来了一位同样喜欢Juggernaut.的同学LodycX，我就更有写Bass House的动力了。因为是最后一次作业了，想玩点花的就给前面写上了一直都很喜欢的Psy Trance做intro，毕竟Psy Bass也是bass对吧，结果这段的lead完全做不出来，摆烂给siren乱画了包络之后被批评了。Bass House的那段drop部分被EN老师夸律动好了，不过也被说了Bass太古早了，想一想自己听歌一直只注重日系的那一些，实际上电子音乐世界中的很多东西都是没见过的，比如已经出现了很久的Color Bass我在去年暑假才听到，听到的时候还感觉疑惑。看来还是要多听啊。 毕业总算是写了自己喜欢很久的Future Bass，学着日韩人揉进去了一些Jersey Club。其实最想写的还是Future Core，作品里面标了自己写了这个风格不过实际上是没有写出来的，可惜。只有开头用了UK Hardcore的写法做了intro，然后breakdown用Breakcore写了，还做了很有意思的Hardstyle风格的fake drop，这样把硬核不同程度地融合进作品里当作不成熟的所谓“core”音乐，也感谢老师们最终认可了这些部分的编排，觉得挺有个性的。最终获得了394分的高分是最令我惊喜的事，基础班第三名的好成绩也是对我的努力的最高认可了。 其实毕业作品的设计上我最喜欢的是那段Jersey Club，虽然老师们都没怎么提。这段时间里我超级超级喜欢Rawstyle里一些drop刚开始时的gated kick，这种对fake drop进行的缓和真的好能带来舒服的听感啊，也能给后面的raw kick感情爆发提供更大的空间。这种把Jersey Club放前面的写法似乎也还没有人做，希望自己以后能有机会完善这些部分。 以上都是在对我自己的学习做总结啊，不过最该感谢的还是学习过程中帮助我的所有人。 首先是要非常非常非常感谢RadiioHax大哥！从报班开始就一直在叨扰你，问各种上课的详情；写作业的时候很多思路与修改都是你帮助我实现的；毕业作品写得最好的旋律部分也是幸好你教了我和弦临时251的写法，不然我就完全憋不出任何旋律了！还有学完Future Bass的晚上你陪我听了好一阵的Future Core，然后跟我讲了许多对于旋律写作的理解，这些建议都太有启发性了，没有你的帮助我没办法这么快地进步。这些晚上打扰到你的睡眠真的是非常抱歉！以及，其实一直找你来帮忙是有我的一点小私心的。我知道你也报名了前几期的CEM课程，但是创作却一直是停滞的状态。我因为音乐游戏认识了你，后来我们也有了相同的对东方Project、同人音乐的爱好，甚至Future Bass的喜爱也是相同的！我们都认可Future Bass没有模板化，仍有机会得到很大的提升不是吗。我的小私心就是希望你能重拾对这些爱好的热情，重新投入到音乐创作来吧！我们也可以努力写出Uranus vs RadiioHax来！ 其次是要感谢DM37班上的各位老师同学，谢谢大家这四周的陪伴。雨季老师与EN老师辛苦了！我一直都在问很奇怪的问题，Techno作业课上问Schranz的事情，Bass House课上还问了Color Bass的做法，谢谢一直忍耐我过分的好奇心！作业课上提出过的建议我都有好好记录，以后一定会多加注意！各位同学，霖筱、Rumia、LodycX、Yumleduo、阿海、Welson、GC、王奕秋、所仪，以及其他，难以在这里列出所有名字的同学们，学习辛苦了！大家的作品都好优秀，都有好多我可以学习的地方。霖筱同学的创意好强！Rumia同学写作的完整性太无可挑剔了，我其实一直希望把自己的作品发给你帮忙看看但是又害怕自己不够格，非常抱歉！LodycX同学你加群用的是Astralv的马甲，我一眼看出来是An厨，光速掏出来专辑和你交流hhhh，没有你在群里的话我就会一直害怕在群里交流（社恐并感），谢谢同好的出现打消了我许多的顾虑！你的毕业作品我也非常喜欢！Welson同学虽然一直自嘲做的曲子太商业了，但是能写出这么扎实的音乐也非常厉害！我一向排斥EDM的想法也因为你而有些转变了，非常感谢！以及各位同学，你们的编排、旋律写作能力都是我难以企及的高度，感谢你们的作品，对我的提升帮助很大很大。 再就是要感谢我的父母，非常支持我在繁忙的学业中追求自己的电子音乐爱好，我获得的这份成绩也希望你们能够满意。我一个人在外地读书，现在又因为疫情打断了清明节回家的计划，你们在家乡对我的支持，就是最能消解我的乡愁与顾虑的鼓励！即使这篇博客会背着你们发出来，还是希望这份感谢能够传达到。 然后是要感谢贰幺拐全天食堂的各位群友！感谢LiZzerong，感谢Hawk，感谢Master，感谢Mercury，让你们一直忍受我的噪声音乐实在是非常抱歉！开始认真创作之后你们来听我的作业提建议也是非常感谢！非常抱歉LiZzerong，没有给你写出好听的歌。以后我也会继续努力的！ 此外还有同寝室的fbhou同学，虽然听电音不多但是一直在鼓励我的创作内容；隔壁寝室的TurtleDove同学，所有的改稿都发给你真是辛苦了，非常抱歉！同样也谢谢你们，以及其他支持我创作的家人、朋友，还有许许多多的，我作为电子音乐听众的路上的引路人，九曲Einkleine师父、Mercury师父、RepenX同学、DOUJiNLiFESCAFE社团……感谢你们！ 那么，到这里，DM37的学习就告一段落了，我会继续努力学习创作的！ 接下来的学习？ 接下来都是emo的部分，所以选择这个时候关闭博客的话我将感激不尽，如果愿意看完的话当然也非常欢迎。 其实为了学习电子音乐，我做了不少准备。大学最开始的一个学期我就去学了一门优秀的乐理选修课，这门课对我的基础音乐观建立帮助很大。然后跟随着DM37，我还报名了隔壁的乐理进阶班学习，但是乐理这方面越学习越困惑了。 首先是，我没有任何可用的乐器基础，只有乐感上浅薄的见解，这让我对自己的旋律非常自卑。在摸索DAW的阶段，我甚至根本不明白音乐的厚度是因为有和弦的存在，得知之后我也完全不明白和弦的写作，三四五个音的叠加也太复杂了，为什么简单的变化就能带来这么大的不同；为什么这样的进行是合理的，那样怎么又会变成不合理的；紧张度、明亮度我该怎么去把握……这些问题我根本想不明白。 然后，我就只敢写6451了，他一定好听，他一定正确，我的旋律也一定要在这他之上构建才是合理的。 但是和弦是那么复杂的事情，自称旋律派的RadiioHax一直劝我要多去注意音乐的和弦，可是我连6451都听不出来，我的耳朵只能听出I级大三和弦是什么样子的和谐，任何的进行我都只有明暗与发展的感官，要提炼出来音符对我来说就是天方夜谭。 我最开始的创作是充满灵感与自信的。我在电子音乐之外也听Mili，这个乐队的小提琴写作是那样的有启发性；我也因为Vocaloid接触了基础的j-rock和c-rock，有意思的旋律是那样的多。听了这些歌曲之后的我非常有创作的欲望，特别是洗澡的时候我能哼出很多有意思的动机。 这一状态因为我对乐理的逐渐了解而不复存在了。对于我自己的旋律我给不出合理的和弦走向，我只敢先把合理的和弦写出来之后在上面叠加滥俗的旋律与律动。因此只用写bassline的Techno和Bass House作业是那样令人愉快，我不用再有任何顾虑；到了EDM和Heaven Trap，这些都是大问题；毕业作品的Future Bass我也是憋了非常久才写出个自己满意的和弦和旋律来，期间产生的垃圾简直令我作呕。 会不会是因为，其实我并没有自己想象中的那么有天赋。 这个恐怖的想法成了克洛诺斯一般的存在，我自己产生的思考动摇了我作为自己的根基。我的自信心很大程度上来自于自己的爱好都有一定的天赋。在我还热衷于歌唱时我的歌声得到了很多成年人的认可，也有音乐学院的老师劝我母亲送我去学音乐；参加算法竞赛的我代码能力令我自己都感到恐怖，我在熟悉语言的阶段也能非常快地得到进展。但是现在，我写不出优美的旋律，我在学校的DDL让我窒息，我的天赋是不是可笑的？我的爱好是不是可笑的？ 天赋很大程度上提供了我对爱好的热情，毕竟不断的进步是所有人都很乐意看到的。那么当我对这一点产生怀疑的时候，我又怎么能够不怀疑自己的爱好？我真的该去学习代码写作吗，我真的该去学习音乐创作吗，我配吗？ 这太恐怖了，我质问自己，你竟敢对自己的爱好产生怀疑？那么多实际上没有那么优秀的同好，也在赞叹代码的美丽，也在为好听的音乐欢喜，而你却就这样有了放弃的心理？怀疑交织着质问，产生的就是指数膨胀的质疑。 最简单的问题就是，如果我做不好，那我还要继续去爱好吗？ 幸好是有RadiioHax的一直支持，以及在DM37毕业后找了Knightmare0学长，问了旋律的学习到底该如何去进行。概括来说，他认为乐理对他的帮助其实不大，他也是注重旋律的曲师，但是他会从灵感开始到旋律再到和弦。灵感可以是动机，可以是情感，也可以是图片。 我终于明白，我在乐理学习的过程中消解了自己对灵感的关注。从乐理的理性视角来构筑一切是舍本逐末的，即使我作为工科生也不该这样不带感情地对待音乐，这是大忌。Mercury听到我的作品之后也是一直在问我，为什么不给歌取名字，而只是标注曲风，我每次都以“不够成熟”搪塞过去。他说的没错，音乐的标题是展示音乐情感的直观注解，而音乐脱离了情感就不再是音乐，只是华而不实的空洞。灵感在这种时候就起到了重要的作用。 接下来我还是要继续学习乐理，因为我的音乐基本功实在是太薄弱了，但是无论何时都不能忘记自己创作欲望满溢时的灵感，这才是创作一切艺术与美的根基。 等到我再次产生旋律焦虑了，我会再回来看这篇博客。 后续的创作（重大发表？） 其实前文说我会继续努力学习创作，这句话对了一半，因为这份毕业作品其实是我以Uranus名义创作的最后一首完整音乐了。就我本人而言，Uranus这份马甲承担了太多的任务：他被我的三次元好友们所熟知；音乐游戏的圈名我也是使用的他；代码生活里，就比如这里的博客，也是以Uranus的名义来写作的。天王星或者乌拉诺斯的身份和我本人太过于绑定了，我也一直以这样的希腊神话来警示自己提高自己的同理心，压制自己的浮躁。那么到了电子音乐创作这一爱好的发展上，我的选择是抛弃掉这个马甲。 提到电子音乐的初衷，甚至要追溯到我变声期反感自己的嗓音的故事。到现在，我对于音乐的看法有很大进步的同时也走向了一定程度的偏激，那么就把这份不自然交给另一个马甲来承担吧！现实生活与代码之类，我会延续Uranus的精神；音乐创作上，我就放心地交给另一个我了。 这是Uranus的电子音乐创作的尾声，是我的电子音乐创作的开始。加油！ Uranus is still in the sky.","link":"/uranusblog/2022/04/04/reflections-on-dm37-graduation/"},{"title":"构建支持tf-lite的XiUOS系统并在QEMU虚拟机上运行","text":"前置知识 XiUOS是一款工业物联网操作系统；tf-lite是TensorFlow机器学习开源库的轻量化模型，可以将其神经网络模型部署到非桌面设备上；QEMU是针对物联网系统的虚拟机环境。这篇文章是针对如何构建支持tf-lite的XiUOS系统并在QEMU虚拟机上运行的教程。 教程内使用的机器环境为 12345Windows 10 Linux SubsystemBUILD: 22000BRANCH: co_releaseRELEASE: Ubuntu 20.04.4 LTSKERNEL: Linux 4.4.0-22000-Microsoft 实际上，这篇教程完全适用于Ubuntu 20.04 LTS和Ubuntu 18.04 LTS，其他操作系统也可以根据命令进行适当修改。选择WSL也是方便Windows用户完成环境配置，但是虚拟机性能可能会受到影响。 此外，完成配置还需要至少一款文本编辑器，教程内使用的是VSCode，在这里不赘述其安装过程。读者也可以根据自己的习惯自行选择其他编辑器。 XiUOS可以在多种单片机环境下构建，这里使用的是arm cortex-m0，这也是tf-lite支持较好的环境，且QEMU在这种环境下的模拟对WSL的支持也较好。 经测试，编译risc-v架构的hifive1环境的XiUOS系统在WSL下的QEMU模拟时会占用CPU 100%并卡死，如果你使用的是WSL环境，请不要选择这一编译方式。 教程会从新安装好的WSL系统开始，到配置完成结束。 编译环境安装 首先需要安装必须的编译环境。在终端内输入 12sudo apt updatesudo apt upgrade 更新Ubuntu软件包。然后输入 123sudo apt install build-essential pkg-config cmake ninja-build gitsudo apt install libglib2.0-dev libpixman-1-devsudo apt install gcc make libncurses5-dev openssl libssl-dev bison flex libelf-dev autoconf libtool gperf libc6-dev 依次安装C/C++编译环境和git，用于后续XiUOS和QEMU源代码的下载和编译。 接下来使用终端移动到构建XiUOS系统的文件夹，例如 123cd ~mkdir testspace/XiUOScd testspace/XiUOS 然后下载安装裁减配置工具kconfig-frontends并安装ARM架构的编译工具链，使用以下命令 12345git clone https://git.trustie.net/xuos/kconfig-frontends.gitcd kconfig-frontends./xs_build.shcd ..sudo apt install gcc-arm-none-eabi 这样就完成了编译环境的安装。 下载编译QEMU 参考文档Download QEMU。 根据文档，从gitlab仓库中下载并编译QEMU，使用以下命令 12345678git clone https://gitlab.com/qemu-project/qemu.gitcd qemugit submodule initgit submodule update --recursive./configuremakesudo make installcd .. 其中./configure命令是配置了整个QEMU包，可能会导致安装过程较长。可以参考相关博客中配置./configure --target-list=XXX的方法编译部分需要的内容。 安装完成后，就可以使用qemu-system-XXX的命令运行各种架构的虚拟机。例如可以使用qemu-system-aarch64运行arm64架构的虚拟机。 下载编译XiUOS 参考文档从零开始构建矽璓工业物联操作系统：使用ARM架构的STM32F407-discovery开发板。 下载git仓库中的XiUOS源码，并用VSCode打开 123git clone https://git.trustie.net/xuos/xiuos.gitcd xiuoscode . 打开的源码将在下一章中进行讲解，现在先来尝试编译源码中提供的Hello World样例。 本篇教程写作于commit 3a35bee743版本，该版本存在一个很大的漏洞，需要先进行修理，后续版本也可能对此进行维护，因此接下来一段代码修改请读者依照所处的编译环境自行选择。修改方法参考这个issue。 接下来配置XiUOS 12cd Ubiquitous/XiUOS/make BOARD=cortex-m0-emulator menuconfig 运行成功将会进入如下配置界面： 如界面介绍，界面的操作方法是按上下左右移动光标，Y表示开启功能，N表示关闭功能，M表示修改功能。XiUOS系统中内置了tf-lite库，需要在这里配置开启。具体位置在 123456menuconfig---&gt;APP_Framework---&gt;Framework---&gt;support knowing framework---&gt;Tensorflow Lite for Micro---&gt;Using tensorflow lite for micro demo app 其他的配置项可以根据自己的需要进行添加。配置完成后将光标移到下方的Save按钮保存后到Exit按钮退出。 接下来就可以开始编译 1make BOARD=cortex-m0-emulator 编译完成后应该可以看到类似下文的提示 12345------------------------------------------------link XiUOS_cortex-m0-emulator.elf------------------------------------------------ text data bss dec hex filename 90604 1812 2728 95144 173a8 XiUOS_cortex-m0-emulator.elf 说明了编译生成的文件名为XiUOS_cortex-m0-emulator.elf，存放路径为当前目录下的build文件夹。尝试使用前文编译的QEMU虚拟机运行 1qemu-system-arm -machine microbit -nographic -kernel build/XiUOS_cortex-m0-emulator.elf 如果出现了 1234567891011 _ _ _ _ _ _| | ___| |_| |_ ___ _ __ ___| |__ ___| | || | / _ \\ __| __/ _ \\ '__| / __| '_ \\ / _ \\ | || |__| __/ |_| || __/ | \\__ \\ | | | __/ | ||_____\\___|\\__|\\__\\___|_| |___/_| |_|\\___|_|_|Build: Mar 16 2022 17:33:52Version: 3.0.5Copyright: (c) 2020 Letterletter:$ Hello, world! 的提示，说明编译运行正常了。使用快捷键ctrl-A后按下X即可退出QEMU虚拟机。 XiUOS源码逻辑简述 XiUOS文件目录为 12345678910111213xiuos├── APP_Framework│ ├── Applications│ ├── Framework│ ├── Kconfig│ ├── Make.defs│ ├── Makefile│ └── lib├── Ubiquitous│ ├── Nuttx│ ├── RT_Thread│ └── XiUOS└── readme.md Ubiquitous文件夹内存放的是操作系统的源码，因此我们前文的编译在xiuos/Ubiquitous/XiUOS/目录下进行。APP_Framework文件夹内存放的是在XiUOS系统中运行的程序代码，内涵的Framework文件夹存放的是程序运行的各种依赖，Applications文件夹存放的是应用程序，特别是xiuos/APP_Framework/Applications/main.c文件，是程序运行的入口。而xiuos/APP_Framework/Framework/knowing/tensorflow-lite/tensorflow-lite-for-mcu文件夹内则是存放有tf-lite的代码。因此在XiUOS内进行软件开发主要是修改作为入口的main.c文件实现需要的功能。","link":"/uranusblog/2022/03/16/build-xiuos-tflite-and-run-on-qemu/"}],"tags":[{"name":"随想","slug":"随想","link":"/uranusblog/tags/%E9%9A%8F%E6%83%B3/"},{"name":"教程","slug":"教程","link":"/uranusblog/tags/%E6%95%99%E7%A8%8B/"}],"categories":[{"name":"site","slug":"site","link":"/uranusblog/categories/site/"},{"name":"music","slug":"music","link":"/uranusblog/categories/music/"},{"name":"IoT","slug":"IoT","link":"/uranusblog/categories/IoT/"}],"pages":[{"title":"关于","text":"上海交通大学在读，软件工程专业2020级本科学生。 编程，音乐游戏，电子硬核音乐。 UranusITS is still in the sky.","link":"/uranusblog/about/index.html"}]}